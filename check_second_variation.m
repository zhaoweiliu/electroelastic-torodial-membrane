function [l1,l2,detM,iszero,P_bifurcation,v_ratio_bifurcation] = check_second_variation( x, y, dy, wave_number)
global epsilon alpha gamma t_span
P = x(1);
k = wave_number;
P_bifurcation=[];
v_ratio_bifurcation=[];
iszero = 0;
d_old = 0;
for i = 1:length(t_span)
    t = t_span(i);
    rho = y(i,1); eta = y(i,3);
    drho = y(i,2); deta = y(i,4);
    ddrho = dy(i,2); ddeta = dy(i,4);
    N = drho^2+deta^2;
    R= 1+gamma*cos(t);
    dRdt = -gamma*sin(t);
    lambda1 = 1/gamma * sqrt(N);
    lambda2 = rho/R;
    l1(i) = lambda1; l2(i) = lambda2;
    dlambda1_dt = (drho*ddrho + deta*ddeta)/(gamma * gamma * lambda1);
    dlambda2_dt = drho/R + (rho*gamma*sin(t) )/ (R^2);
%     Omega_rhorho = 2 * (1+alpha*lambda1^2)/(R^2)*...
%         (1 + 3/(lambda1^2*lambda2^4)) + (3 * epsilon * lambda1^2)/(2*R^2);   
    Omega_rhorho = 2/R^2 - (2*gamma^2*R^2*N)/((rho^2*N)^2) +...
        (8*gamma^2*R^2 * N)/((rho^2*N)^2) +...
         alpha*((2*N)/(R^2*gamma^2) - (6*gamma^2)/(rho^2*N) +...
            6*(R^2*N + rho^2*gamma^2)/ (rho^4*N)) + (3*epsilon*N)/(2*gamma^2*R^2);
%     Omega_rhorho_t = 4*lambda2*drho / (R * gamma^2) *(alpha+1/(lambda1^4*lambda2^4))...
%         + drho*epsilon*lambda2/(gamma^2*R);    
    Omega_rhorho_t = (4*R^2*drho*gamma^2)/(rho^3*N^2) +...
        alpha*(4*rho*drho/(R^2*gamma^2)) +...
        epsilon * rho * drho/(gamma^2*R^2); 
%     dOmega_rhorho_t_dt = 4/(gamma^2) * (((drho*gamma*sin(t))/(R^2) + ddrho/R) *...
%         (alpha*lambda2 + 1/(lambda1^4*lambda2^3)) + drho/R *(alpha*dlambda2_dt -...
%         (4*dlambda1_dt)/(lambda1^5*lambda2^3) - (3*dlambda2_dt)/(lambda1^4*lambda2^4)))+...
%         epsilon/(gamma^2) * (ddrho * lambda2/(R) +...
%         (drho*gamma*sin(t)*lambda2)/(R^2) -...
%         3*drho*dlambda2_dt / (R) -...
%         4*drho*lambda2*dlambda1_dt / (lambda1*R));
    dOmega_rhorho_t_dt = (8*gamma^2*R*drho*dRdt)/(rho^3*N^2) +...
        (4*gamma^2*R^2*drho^2)/(rho^4*N^2) - (4*gamma^2*R^2*ddrho)/(rho^3*N^2)+...
        (4*gamma^2*R^2*(4*rho*drho^2 + 2 * rho^2 * ddrho))/(rho^5*N^2)+...
        (8*gamma^2*R^2*drho*(2*drho*ddrho + 2*deta*ddeta))/(rho^3*N^3) - ...
        (16*gamma^2*R^2*drho*(2*rho*N*drho + rho^2*(2*drho*ddrho+2*deta*ddeta)))/(rho^5*N^3)+...
        alpha*( -(8*rho*drho*dRdt)/(gamma^2*R^3) + (4*drho^2)/(gamma^2*R^2) + (4*rho*ddrho)/(gamma^2*R^2)) + ...
        epsilon*((2*rho*drho*dRdt)/(gamma^2*R^3) - (3*drho^2)/(gamma^2*R^2) +(rho*ddrho)/(gamma^2*R^2) -...
        (2*rho*drho*(2*drho*ddrho+2*deta*ddeta))/(gamma^2*R^2*N));
   
    Omega_rho_phirho_phi = 2/(R^2) - (2*deta^2*gamma^2*R^2)/((rho^2*N)^2)+...
        alpha*((2*gamma^2)/(rho^2*N) + (2*deta^2)/(gamma^2 * R^2) -...
        (2*deta^2*(N*R^2 + rho^2*gamma^2))/((rho^2*N)^2)) + ...
        (epsilon*deta^2)/(2*gamma^2*R^2);
    
    m11 = (- Omega_rhorho + dOmega_rhorho_t_dt)*R - gamma *sin(t) * Omega_rhorho_t + (P/gamma)*deta - k^2*Omega_rho_phirho_phi*R;
%     
%     dOmega_rho_teta_t_dt = 8/gamma^4 * ( (ddrho*deta+drho*ddeta)*(1+alpha*lambda2^2)*1/(lambda1^6*lambda2^2)+...
%         drho*deta*(2*alpha*lambda2*dlambda2_dt)*1/(lambda1^6*lambda2^2) -...
%         drho*deta*gamma^4*(1+alpha*lambda2^2)*((6*dlambda1_dt)/(lambda1^7*lambda2^2)+(2*dlambda2_dt)/(lambda1^6*lambda2^3)))+...
%         epsilon * ((2*ddrho*deta * lambda2^2)/(gamma^4*lambda1^2) + (2*drho*ddeta*lambda2^2)/(gamma^4*lambda1^2) -...
%         (4*drho*deta*lambda2*dlambda2_dt)/(gamma^4*lambda1^2) - (12*drho*deta*lambda2^2*dlambda1_dt)/(gamma^4*lambda1^3));
%     
%     Omega_rho_teta_t = 8*drho*deta/gamma^4 * (1+alpha*lambda2^2)/(lambda1^6*lambda2^2) ...
%         + 2*drho*deta*epsilon*lambda2^2/(gamma^4 * R);
    
    Omega_rho_phieta_phi = (2*drho*deta*gamma^2*R^2)/((rho^2*N)^2) +...
        alpha *( -(2*drho*deta)/(gamma^2 * R^2) + ...
        (2*drho*deta*(N*R^2 + rho^2*gamma^2))/((rho^2*N)^2)) + ...
        (epsilon*drho*deta)/(2*gamma^2*R^2);
    
%     m12 =( - Omega_rhoeta_t + dOmega_rho_teta_t_dt)*R - gamma*sin(t)*Omega_rho_teta_t + (2*P/gamma)*rho;
    m12 = - k^2 * Omega_rho_phieta_phi * R;
        
    Omega_rhoDN = - epsilon * 2 / (lambda2*R);
    
    dOmega_rho_tD_dtN = - epsilon * 2/(gamma^2) * (ddrho/(lambda1^2) -...
        (4*drho*dlambda1_dt)/(lambda1^3) - (2*drho*dlambda2_dt)/(lambda1^2*lambda2));
    
    Omega_rho_tDN = - 2*epsilon*drho/(lambda1^2 * gamma^2);
    
    m13 = (-Omega_rhoDN + dOmega_rho_tD_dtN)*R - gamma*sin(t)*Omega_rho_tDN;
    
%     Omega_rhoeta_t = (4*lambda2*deta)/(R*gamma^2)*...
%         (alpha+1/(lambda1^4*lambda2^4)) + (deta*epsilon*lambda2)/(gamma^2*R);
    
    Omega_rhoeta_t = (4*R^2*deta*gamma^2)/(rho^3*N^2) +...
        alpha*(4*rho*deta/(R^2*gamma^2)) + (deta*epsilon * rho)/(gamma^2*R^2) ;
        
%     dOmega_rhodeta_dt = 4/(gamma^2) * (((deta*gamma*sin(t))/R^2 + ddeta/R) * ...
%         (alpha*lambda2 + 1/(lambda1^4*lambda2^3)) + deta/R *(alpha*dlambda2_dt -...
%         (4*dlambda1_dt)/(lambda1^5*lambda2^3) - (3*dlambda2_dt)/(lambda1^4*lambda2^4)))+...
%         epsilon/(gamma^2) * (ddeta*lambda2/(R) +...
%         (deta*gamma*sin(t)*lambda2)/(R^2) - ...
%         3*deta*dlambda2_dt / (R) -...
%         4*deta*lambda2*dlambda1_dt / (lambda1*R));
    
    dOmega_rhodeta_dt = (8*gamma^2*R*deta*dRdt)/(rho^3*N^2) +...
        (4*gamma^2*R^2*deta*drho)/(rho^4*N^2) - (4*gamma^2*R^2*ddeta)/(rho^3*N^2)+...
        (4*gamma^2*R^2*(4*rho*drho*deta + 2 * rho^2 * ddeta))/(rho^5*N^2)+...
        (8*gamma^2*R^2*deta*(2*drho*ddrho + 2*deta*ddeta))/(rho^3*N^3) - ...
        (16*gamma^2*R^2*deta*(2*rho*N*drho + rho^2*(2*drho*ddrho+2*deta*ddeta)))/(rho^5*N^3)+...
        alpha*(-(8*rho*deta*dRdt)/(gamma^2*R^3) + (4*drho*deta)/(gamma^2*R^2) + (4*rho*ddeta)/(gamma^2*R^2))+...
        epsilon*((2*rho*deta*dRdt)/(gamma^2*R^3) - (3*drho*deta)/(gamma^2*R^2) +(rho*ddeta)/(gamma^2*R^2) -...
        (2*rho*deta*(2*drho*ddrho+2*deta*ddeta))/(gamma^2*R^2*N));
        
    m21 = R * dOmega_rhodeta_dt - gamma*sin(t)*Omega_rhoeta_t - (P/gamma)*drho - k^2 * Omega_rho_phieta_phi * R;
    
%     dOmega_eta_t_eta_t_dt = 2/gamma * (2*alpha*lambda2*dlambda2_dt * ...
%         ((1-1/(lambda1^4*lambda2^2)) + 4*deta^2/(gamma^2 *lambda1^6*lambda2^2) ) +...
%         (1+alpha*lambda2^2) *(4*dlambda1_dt/(lambda1^5*lambda2^2) +2*dlambda2_dt/(lambda1^4*lambda2^3) +...
%         4/gamma^2 *(2*deta*ddeta/(lambda1^6*lambda2^2) - 6*deta^2*dlambda1_dt/(lambda1^7*lambda2^2) -...
%         2*deta^2*dlambda2_dt/(lambda1^6*lambda2^3) ) ) ) +...
%         epsilon *(2/gamma^4 * (2*deta*ddeta*dlambda2_dt*lambda2^2/lambda1^2 - 6*deta^2*lambda2^2*dlambda1_dt/lambda1^3 -...
%         2*deta^2*lambda2*dlambda2_dt/ lambda1^2 ) + 1/(2*gamma^2) * (4*lambda2^2*dlambda1_dt/lambda1 + 2*lambda2*dlambda2_dt) );
    
%     Omega_eta_teta_t = 2/gamma^2 *(1+alpha*lambda2^2)*((1-1/(lambda1^4*lambda2^2))+ 4*deta^2/(gamma^2*lambda1^6*lambda2^2)) + ...
%         epsilon*(2*deta^2*lambda2^2/(gamma^4*lambda1^2) - lambda2^2/(2*gamma^2));
    
    Omega_eta_phieta_phi = 2/(R^2) - (2*drho^2*gamma^2*R^2)/((rho^2*N)^2)+...
        alpha*((2*gamma^2)/(rho^2*N) + (2*drho^2)/(gamma^2 * R^2) -...
        (2*drho^2*(N*R^2 + rho^2*gamma^2))/((rho^2*N)^2)) + ...
        (epsilon*drho^2)/(2*gamma^2*R^2);
    
%     m22 = (dOmega_eta_t_eta_t_dt)*R - gamma*sin(t)*Omega_eta_teta_t;
    
    m22 = - k^2 * Omega_eta_phieta_phi * R;
    
    dOmega_eta_tD_dtN = - epsilon * 2/(gamma^2) * (ddeta/(lambda1^2) -...
        (4*deta*dlambda1_dt)/(lambda1^3) - (2*deta*dlambda2_dt)/(lambda1^2*lambda2));
    
    Omega_eta_tDN = - 2*epsilon*deta/(lambda1^2 * gamma^2);
    
    m23 = R*dOmega_eta_tD_dtN - gamma*sin(t)* Omega_eta_tDN;
        
    m31 = -  2 / (lambda2*R);
        
    m32 = 0;
        
    m33 = 2 / (lambda1^2 * lambda2^2);
    
    M = [m11 m12 m13; m21 m22 m23; m31 m32 m33];
%     M = [m11 m12; m21 m22];

    
    d = det(M);
    
    if (d_old < 0 && d > 0) || (d_old > 0 && d < 0)
        iszero = 1;
    end

    detM(i) = d;
    d_old = d;
    
    if iszero == 1
      P_bifurcation =[P_bifurcation x(1)];
      area_deform = 0;
      for j = 1 : length(t_span)-1
          area_deform = area_deform + (y(j,3) + y(j+1,3)) * abs(y(j+1,1) - y(j,1))/2;
      end
      v_ratio_bifurcation = [v_ratio_bifurcation (area_deform - 1/2 * pi * gamma^2)/ (1/2 * pi * gamma^2)];
    end
  
end

end

